package commitmessagetemplate;

import com.intellij.openapi.fileChooser.FileChooserDescriptor;
import com.intellij.openapi.fileChooser.FileChooserDescriptorFactory;
import com.intellij.openapi.project.Project;
import com.intellij.openapi.ui.TextFieldWithBrowseButton;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 * Created by matan.goren on 23-Sep-16.
 */
public class CommitMessageTemplateConfigurableGUI {
    private JPanel rootPanel;
    private JTextArea commitMessageTextBox;
    private JRadioButton setTemplateRadioButton;
    private JRadioButton loadTemplateFileRadioButton;
    private TextFieldWithBrowseButton templateFilePath;
    private JTextField commentChar;
    private JLabel commentCharLabel;
    private JRadioButton setTemplateRadioButtonPR;
    private JTextArea commitMessageTextBoxPR;
    private JRadioButton loadTemplateFileRadioButtonPR;
    private TextFieldWithBrowseButton templateFilePathPR;
    private JLabel commentCharLabelPR;
    private JTextField commentCharPR;
    private JLabel messagePR;
    private JLabel messageCommit;
    private CommitMessageTemplateConfig config;
    private FileChooserDescriptor descriptor = FileChooserDescriptorFactory.createSingleFileDescriptor("txt");

    void createUI(Project project) {
        config = CommitMessageTemplateConfig.getInstance(project);
        templateFilePath.addBrowseFolderListener("Point to Commit Template File", "Choose .txt file", null,
                descriptor);

        setTemplateRadioButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                commitMessageTextBox.setEnabled(true);
                templateFilePath.setEnabled(false);
                commentChar.setEnabled(false);
            }
        });

        loadTemplateFileRadioButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                templateFilePath.setEnabled(true);
                commentChar.setEnabled(true);
                commitMessageTextBox.setEnabled(false);
            }
        });

        if (config != null) {
            commitMessageTextBox.setText(config.getManualTemplate());
            setTemplateRadioButton.setSelected(config.getRadioStatus());
            loadTemplateFileRadioButton.setSelected(!config.getRadioStatus());
            templateFilePath.setText(config.getTemplateFilePath());
            commitMessageTextBox.setEnabled(config.getRadioStatus());
            templateFilePath.setEnabled(!config.getRadioStatus());
            commentChar.setEnabled(!config.getRadioStatus());
            commentChar.setText(config.getCommentChar());
        }
    }

    JPanel getRootPanel() {
        return rootPanel;
    }

    boolean isModified() {
        return !commitMessageTextBox.getText().equals(config.getManualTemplate()) ||
                !setTemplateRadioButton.isSelected() == config.getRadioStatus() ||
                !templateFilePath.getText().equals(config.getTemplateFilePath()) ||
                !commentChar.getText().equals(config.getCommentChar());
    }

    void apply() {
        config.setCommitMessage(commitMessageTextBox.getText());
        config.setRadioStatus(setTemplateRadioButton.isSelected());
        config.setTemplateFilePath(templateFilePath.getText());
        config.setCommentChar(commentChar.getText());
    }

    void reset() {
        commitMessageTextBox.setText(config.getManualTemplate());
        setTemplateRadioButton.setSelected(config.getRadioStatus());
        loadTemplateFileRadioButton.setSelected(!config.getRadioStatus());
        commitMessageTextBox.setEnabled(config.getRadioStatus());
        templateFilePath.setEnabled(!config.getRadioStatus());
        commentChar.setEnabled(!config.getRadioStatus());
        commentChar.setText(config.getCommentChar());
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        rootPanel = new JPanel();
        rootPanel.setLayout(new GridLayoutManager(1, 1, new Insets(0, 0, 0, 0), -1, -1));
        final JSplitPane splitPane1 = new JSplitPane();
        rootPanel.add(splitPane1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, new Dimension(200, 200), null, 0, false));
        final JPanel panel1 = new JPanel();
        panel1.setLayout(new GridLayoutManager(7, 1, new Insets(0, 0, 0, 0), -1, -1));
        splitPane1.setLeftComponent(panel1);
        setTemplateRadioButton = new JRadioButton();
        setTemplateRadioButton.setText("Set Template");
        panel1.add(setTemplateRadioButton, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        commitMessageTextBox = new JTextArea();
        commitMessageTextBox.setText("");
        panel1.add(commitMessageTextBox, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        loadTemplateFileRadioButton = new JRadioButton();
        loadTemplateFileRadioButton.setText("Load Template File");
        panel1.add(loadTemplateFileRadioButton, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        templateFilePath = new TextFieldWithBrowseButton();
        templateFilePath.setText("");
        panel1.add(templateFilePath, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        commentCharLabel = new JLabel();
        commentCharLabel.setText("Comment character (leave empty to disable)");
        panel1.add(commentCharLabel, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        commentChar = new JTextField();
        commentChar.setText("#");
        panel1.add(commentChar, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("Commit message");
        panel1.add(label1, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new GridLayoutManager(7, 1, new Insets(0, 0, 0, 0), -1, -1));
        splitPane1.setRightComponent(panel2);
        final JRadioButton radioButton1 = new JRadioButton();
        radioButton1.setText("Set Template");
        panel2.add(radioButton1, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JTextArea textArea1 = new JTextArea();
        textArea1.setText("");
        panel2.add(textArea1, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        final JRadioButton radioButton2 = new JRadioButton();
        radioButton2.setText("Load Template File");
        panel2.add(radioButton2, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final TextFieldWithBrowseButton textFieldWithBrowseButton1 = new TextFieldWithBrowseButton();
        textFieldWithBrowseButton1.setText("");
        panel2.add(textFieldWithBrowseButton1, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Comment character (leave empty to disable)");
        panel2.add(label2, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JTextField textField1 = new JTextField();
        textField1.setText("#");
        panel2.add(textField1, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("Pull request message");
        panel2.add(label3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ButtonGroup buttonGroup;
        buttonGroup = new ButtonGroup();
        buttonGroup.add(setTemplateRadioButton);
        buttonGroup.add(loadTemplateFileRadioButton);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }
}
